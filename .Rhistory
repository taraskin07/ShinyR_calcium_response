source("~/Rprojects/Shiny_project_calcium_last/engine.R")
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
install.packages("shinythemes")
install.packages("readxl")
install.packages("writexl")
install.packages("pastecs")
install.packages("DT")
install.packages("ggplot2")
install.packages("plotly")
install.packages("gtools")
install.packages("tidyverse")
install.packages("DescTools")
install.packages("randomcoloR")
install.packages("shinyWidgets")
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mpkCCD003SOCE <- read_excel("~/Rprojects/Test_files/2023-05-12-mpkCCD003SOCE.xlsx",
sheet = "Ratio")
View(mpkCCD003SOCE)
mpkCCD003SOCE_Rotated <- read_excel("~/Rprojects/Test_files/2023-05-12-mpkCCD003SOCE-Rotated.xlsx",
sheet = "data_rotated")
View(mpkCCD003SOCE_Rotated)
asadasda <- average_curve(mpkCCD003SOCE_Rotated)
View(asadasda)
ggplotly_render(asadasda)
shiny::runApp()
runApp()
runApp()
runApp()
View(mpkCCD003SOCE_Rotated)
mpkCCD003SOCE_Rotated2 <- cbind(mpkCCD003SOCE_Rotated[grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))],
decim(mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))]), 3)
mpkCCD003SOCE_Rotated[grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))]
mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))]
decim(mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))])
dcm <- Vectorize(decim)
dcm(mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))])
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
dcm <- Vectorize(decim)
dcm(mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))])
mpkCCD003SOCE_Rotated2 <- cbind(mpkCCD003SOCE_Rotated[grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))],
decim(mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))]), 3)
mpkCCD003SOCE_Rotated2 <- cbind(mpkCCD003SOCE_Rotated[grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))],
dcm(mpkCCD003SOCE_Rotated[-grep('([Tt]ime\\s?)', colnames(mpkCCD003SOCE_Rotated))]), 3)
View(mpkCCD003SOCE_Rotated2)
View(mpkCCD003SOCE_Rotated)
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
runApp()
mpkCCD003SOCE_Rotated <- read_excel("~/Rprojects/Test_files/2023-05-12-mpkCCD003SOCE-Rotated.xlsx",
sheet = "data_rotated")
data_frame_input <- mpkCCD003SOCE_Rotated
subsetted <- subset(data_frame_input, (Time < b_max & Time > b_min))
data_frame_input <- time_col_name(data_frame_input)
subsetted <- subset(data_frame_input, (Time < b_max & Time > b_min))
data_frame_input <- time_col_name(data_frame_input)
View(data_frame_input)
subsetted <- subset(data_frame_input, (Time < b_max & Time > b_min))
b_max <- 120
b_min <- 0
subsetted <- subset(data_frame_input, (Time < b_max & Time > b_min))
View(subsetted)
subsetted <- subset(data_frame_input, (Time <= b_max & Time > b_min))
View(subsetted)
subsetted <- subset(data_frame_input, (Time <= b_max & Time >= b_min))
View(subsetted)
subsetted[2]
averb <- mean(subsetted[, 2])
averb <- mean(subsetted[2])
subsetted[2]
subsetted[[2]]
b <- mean(subsetted[[2]])
b
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
runApp()
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
View(data_frame_input)
runApp()
x <- find_intersection(data_frame_input, 560, 25, b)
x
pl <- data_frame_input[c(1,2)]
View(pl)
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
polygon_function(data_frame_input, 560, 760, 25, b)
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
polygon_function(data_frame_input, 560, 760, 25, b)
runApp()
runApp()
runApp()
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
runApp()
source("~/Rprojects/Shiny_project_calcium_last/engine.R")
runApp()
runApp()
runApp()
mpkCCD003SOCE_Rotated
# --------------------------------------------------------------------------------------
mpkCCD003SOCE_Rotated <- read_excel("~/Rprojects/Test_files/2023-05-12-mpkCCD003SOCE-Rotated.xlsx",
sheet = "data_rotated")
data_frame_input <- mpkCCD003SOCE_Rotated
data_frame_input <- time_col_name(data_frame_input)
b_max <- 120
b_min <- 0
subsetted <- subset(data_frame_input, (Time <= b_max & Time >= b_min))
subsetted[24]
subsetted[25]
b <- mean(subsetted[[25]])
b
pl <- data_frame_input[c(1,25)]
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(data_frame_input, 560, 760, 25, b)
View(pl)
pl <- data_frame_input[c(1,25)]
b
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(data_frame_input, 560, 760, 25, b)
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(data_frame_input, 560, 760, 25, b)
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(data_frame_input, 560, 760, 25, b)
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(pl, 560, 760, 25, b)
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(pl, 560, 760, 25, b)+
theme(legend=FALSE)
ggplotly_render(pl,
baseline = T,
b_min = 0,
b_max = 120,
region = T,
r_min = 560,
r_max = 760,
ready = FALSE) +
scale_color_manual(values='black') +
geom_hline(yintercept=b, color = "blue") +
polygon_function(pl, 560, 760, 25, b) + theme(legend.position = "none")
